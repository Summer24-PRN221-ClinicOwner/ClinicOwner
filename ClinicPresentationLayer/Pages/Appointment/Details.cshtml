@page
@model ClinicPresentationLayer.Pages.Appointment.DetailsModel
@using BusinessObjects
@using BusinessObjects.Entities
@using ClinicPresentationLayer.Extension
@{
    ViewData["Title"] = "Details";
    var CurrentUser = HttpContext.Session.GetObject<User>("UserAccount");
}
<!-- CKEditor CDN -->
<script src="https://cdn.ckeditor.com/ckeditor5/40.0.0/classic/ckeditor.js"></script>
<h1>Details</h1>

<div>
    <h4>Appointment</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.StartSlot)
        </dt>
        <dd class="col-sm-10">
            @Model.GetTimeFromSlot(Model.Appointment.StartSlot)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.EndSlot)
        </dt>
        <dd class="col-sm-10">
            @Model.GetTimeFromSlot(Model.Appointment.EndSlot)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.Room)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Appointment.Room.RoomNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.Dentist)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Appointment.Dentist.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.Patient)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Appointment.Patient.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.Service)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Appointment.Service.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Appointment.AppointDate)
        </dt>
        <dd class="col-sm-10">
            @Model.Appointment.AppointDate.ToString("dd-MM-yyyy")
        </dd>
    </dl>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (@Model.CurrentUser.Role == @BusinessObjects.UserRoles.Dentist)
{
    <h1>@(Model.Appointment.Report.Name == null ? "Create Report" : "Update Report")</h1>

    <form method="post" asp-route-id="@Model.Appointment.Id">
        <div>
            <label asp-for="Appointment.Report.Name"></label>
            <input asp-for="Appointment.Report.Name" />
        </div>
        <div>
            <label asp-for="Appointment.Report.Data"></label>
            <textarea asp-for="Appointment.Report.Data" id="editor"></textarea>
        </div>

        <button type="submit">Save</button>
    </form>
}
else if (@Model.CurrentUser.Role == @BusinessObjects.UserRoles.Patient)
{
    @if (@Model.Appointment.Report == null)
    {
        <p>No report available</p>
    }
    else
    {
        <h4>Report for Appointment:</h4>
        <p>@Model.Appointment.Report.Name</p>
        @Html.Raw(@Model.Appointment.Report.Data)
    }
}

<script>
    ClassicEditor
        .create(document.querySelector('#editor'))
        .catch(error => {
            console.error(error);
        });
</script>
@if (CurrentUser.Role != 2)
{
    <div>
        <a asp-page="./List">Back to List</a>
    </div>
}
@if (CurrentUser.Role == 2)
{
    <div>
        <a asp-page="/PatientHistory">Back to List</a>
    </div>
}
