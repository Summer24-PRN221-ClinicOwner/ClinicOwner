@page
@model ClinicPresentationLayer.Pages.Appointment.ListModel
@{

    var schedule = new string[8, 7];

    // Hardcoding the schedule data
    schedule[0, 0] = "Mr. A\nNhổ răng khôn";
    schedule[2, 2] = "Mr. B\nLàm trắng răng";
    schedule[4, 1] = "Mr. C\nNhổ răng thường";
    // schedule[1, 3] = "Mr. D\nKhám tổng quát";

}

<body>
    <h1>Clinic Schedule</h1>

    <h1>Schedule</h1>
   @*  <table class="table table-bordered"> *@
       <table>  
       <thead>
            <tr>
                <th></th>
                <th>Thứ 2</th>
                <th>Thứ 3</th>
                <th>Thứ 4</th>
                <th>Thứ 5</th>
                <th>Thứ 6</th>
                <th>Thứ 7</th>
                <th>Chủ Nhật</th>
                
            </tr>
        </thead>
        <tbody>
            @for (int slot = 0; slot < 8; slot++)
            {
                <tr>
                    <td>Slot @slot</td>
                    @for (int day = 0; day < 7; day++)
                    {
                        var cellContent = schedule[slot, day];
                        <td class="@(string.IsNullOrEmpty(cellContent) ? "" : "highlight")">@cellContent</td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid black;
            text-align: center;
            padding: 8px;
            white-space: pre-line;
        }

        .highlight {
            background-color: yellow;
        }
    </style>
@*     <script>
        $(function () {
            $('#dateRange').daterangepicker({
                opens: 'left',
                autoApply: true,
                locale: {
                    format: 'MM/DD/YYYY'
                },
                isInvalidDate: function (date) {
                    return date.day() !== 1; // Disable all days except Monday
                },
                startDate: moment().day(1), // Start with the current week's Monday
                endDate: moment().day(7) // End with the current week's Sunday
            }, function (start, end, label) {
                if (start.day() === 1) {
                    end = start.clone().day(7);
                    $('#dateRange').val(start.format('MM/DD/YYYY') + ' - ' + end.format('MM/DD/YYYY'));
                }
            });

            // Update the end date to the following Sunday if the start date is changed
            $('#dateRange').on('apply.daterangepicker', function (ev, picker) {
                if (picker.startDate.day() === 1) {
                    picker.endDate = picker.startDate.clone().day(7);
                    $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
                }
            });
        });
    </script> *@
</body>
