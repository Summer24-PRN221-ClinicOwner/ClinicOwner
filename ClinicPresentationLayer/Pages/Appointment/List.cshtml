@page
@model ClinicPresentationLayer.Pages.Appointment.ListModel
@{
    var schedule = Model.AppointmentSchedule;
}

<body>
    <h1>Clinic Schedule</h1>
    <div>
        <a asp-page="./List" asp-route-PageWeek="@(Model.PageWeek - 1)" class="btn btn-primary">Previous</a>
        <a asp-page="./List" asp-route-PageWeek="@(Model.PageWeek + 1)" class="btn btn-primary">Next</a>
    </div>
    <h1>Schedule</h1>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>Thứ 2</th>
                <th>Thứ 3</th>
                <th>Thứ 4</th>
                <th>Thứ 5</th>
                <th>Thứ 6</th>
                <th>Thứ 7</th>
                <th>Chủ Nhật</th>
            </tr>
        </thead>
        <tbody>
            @for (int slot = 0; slot < 10; slot++)
            {
                <tr>
                    <td>@("Slot " + (slot + 1) + " : " + GetSlotTime(slot))</td>
                    <td class="@(HasAppointment(schedule.Monday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Monday, slot)</td>
                    <td class="@(HasAppointment(schedule.Tuesday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Tuesday, slot)</td>
                    <td class="@(HasAppointment(schedule.Wednesday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Wednesday, slot)</td>
                    <td class="@(HasAppointment(schedule.Thursday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Thursday, slot)</td>
                    <td class="@(HasAppointment(schedule.Friday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Friday, slot)</td>
                    <td class="@(HasAppointment(schedule.Saturday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Saturday, slot)</td>
                    <td class="@(HasAppointment(schedule.Sunday, slot) ? "highlight" : "")">@GetAppointmentCellContent(schedule.Sunday, slot)</td>
                </tr>
            }
        </tbody>
    </table>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid black;
            text-align: center;
            padding: 8px;
            white-space: pre-line;
        }

        .highlight {
            background-color: yellow;
        }
    </style>

    @functions {
        public string GetSlotTime(int slotIndex)
        {
            switch (slotIndex)
            {
                case 0: return "7h00 - 8h00";
                case 1: return "8h00 - 9h00";
                case 2: return "9h00 - 10h00";
                case 3: return "10h00 - 11h00";
                case 4: return "11h00 - 12h00";
                case 5: return "13h00 - 14h00";
                case 6: return "14h00 - 15h00";
                case 7: return "15h00 - 16h00";
                case 8: return "16h00 - 17h00";
                case 9: return "17h00 - 18h00";
                default: return "";
            }
        }

        public string GetAppointmentCellContent(List<BusinessObjects.Entities.Appointment> appointments, int slot)
        {
            var appointment = appointments.FirstOrDefault(a => a.StartSlot <= slot + 1 && a.EndSlot >= slot + 1);
            return appointment != null ? $"Patient: Mr. {appointment.Patient.Name}\nService: {appointment.Service.Name}\n" : "";
            // return appointment != null ? $"Patient: Mr. {appointment.Patient.Name}\nService: {appointment.Service.Name}\nRoom: {appointment.Room.RoomNumber}" : "";
        }

        public bool HasAppointment(List<BusinessObjects.Entities.Appointment> appointments, int slot)
        {
            return appointments.Any(a => a.StartSlot <= slot + 1 && a.EndSlot >= slot + 1);
        }
    }
</body>
