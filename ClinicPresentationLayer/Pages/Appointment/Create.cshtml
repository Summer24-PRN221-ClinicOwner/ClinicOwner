@page
@using BusinessObjects
@using BusinessObjects.Entities
@model ClinicPresentationLayer.Pages.Appointment.CreateModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Create Appointment";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
</head>
<body>
    <div id="main-wrapper" class="show">
        <h1>Create Appointment</h1>
        <hr />
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                <p>@TempData["ErrorMessage"]</p>
            </div>
        }
        <div class="row">
            <form id="combinedForm" method="post" asp-page-handler="Submit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <select class="form-control" asp-for="Appointment.ServiceId" hidden>
                        <option>@Model.Service.Id</option>
                    </select>
                    <span asp-validation-for="Appointment.ServiceId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label class="control-label">Chi tiết dịch vụ</label>
                    <div>
                        <strong>Tên dịch vụ: </strong>@Model.Service.Name
                    </div>
                    <div>
                        <strong>Mô tả: </strong>@Model.Service.Description
                    </div>
                    <div>
                        <strong>Chi phí: </strong>@Model.Service.Cost
                    </div>
                    <div>
                        <strong>Thời gian: </strong>@Model.Service.Duration minutes
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Appointment.AppointDate" class="control-label">Appointment Date</label>
                    <input type="date" asp-for="Appointment.AppointDate" class="form-control" id="Appointment_AppointDate" onchange="updateAvailableSlots();" min="" min="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddYears(5).ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="Appointment.AppointDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Appointment.StartSlot" class="control-label">Start Slot</label>
                    <select id="appointment-slots-partial" asp-for="Appointment.StartSlot" class="form-control" onchange="updateAvailableDentists()">
                        @* Populate slots dynamically based on appointment date and service *@
                        @await Html.PartialAsync("_SlotPartial", new List<Slot>())
                    </select>
                    <span asp-validation-for="Appointment.StartSlot" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Appointment.DentistId" class="control-label">Dentist</label>
                    <select id="dentist-list" asp-for="Appointment.DentistId" class="form-control">
                        @* Populate dentists dynamically based on selected slot and service *@
                        @await Html.PartialAsync("_DentistPartial", new List<Dentist>())
                    </select>
                    <span asp-validation-for="Appointment.DentistId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PaymentMethod" class="control-label">Payment Method</label>
                    <select asp-for="PaymentMethod" class="form-control">
                        <option value="" selected disabled>Select Payment Method</option>
                        <option value="vnpay">VNPay</option>
                        @* <option value="momo">MoMo</option> *@
                    </select>
                    <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit Retainer Fee Appointment</button>
                </div>
            </form>
            @* @if (!string.IsNullOrEmpty(Model.VnpayUrl))
            {
                <div class="form-group">
                    <a href="@Model.VnpayUrl" class="btn btn-success">Pay with VNPay</a>
                </div>
            } *@
        </div>
        <h5 class="mt-10">Related Services</h5>
        <div class="d-flex justify-content-between">
            @if (Model.Services != null)
            {
                @foreach (var service in Model.Services)
                {
                    <div class="service-box d-flex">
                        <div>
                            <h2>@service.Name</h2>
                            <p>@service.Description</p>
                            <p>@service.Cost?.ToString("C")</p>
                            <p>Duration: @service.Duration</p>
                            <a asp-page="./Appointment/Create" asp-route-id="@service.Id">Book Appointment</a>
                        </div>
                        <div>
                            <img class="image-service" src="~/images/defaultImage.jpg" alt="Ảnh của dịch vụ @service.Name" />
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <script>
        function updateAvailableSlots() {
            var appointmentDate = $('#Appointment_AppointDate').val();
            var serviceDuration = @Model.Service.Duration;

            $.ajax({
                url: '@Url.Page("./Create", new { handler = "AvailableSlotsPartial" })',
                type: 'GET',
                data: { appointmentDate: appointmentDate, serviceDuration: serviceDuration },
                success: function (data) {
                    $('#appointment-slots-partial').html(data);
                    updateAvailableDentists();
                    console.log(data);
                },
                error: function (xhr, status, error) {
                    console.error('Error updating available slots:', error);
                }
            });
            updateAvailableDentists();
        }

        function updateAvailableDentists() {
            var appointmentDate = $('#Appointment_AppointDate').val();
            var serviceDuration = @Model.Service.Duration;
            var startSlot = $('#appointment-slots-partial').val();
            var serviceId = @Model.Service.Id;

            $.ajax({
                url: '@Url.Page("./Create", new { handler = "AvailableDentistsPartial" })',
                type: 'GET',
                data: {
                    appointmentDate: appointmentDate,
                    serviceDuration: serviceDuration,
                    startSlot: startSlot,
                    serviceId: serviceId
                },
                success: function (data) {
                    $('#dentist-list').html(data);
                    console.log(data);
                },
                error: function (xhr, status, error) {
                    console.error('Error retrieving available dentists:', error);
                }
            });
        }

        document.addEventListener('DOMContentLoaded', function () {
            var today = new Date().toISOString().split('T')[0];
            document.getElementById('Appointment_AppointDate').setAttribute('min', today);
        });
    </script>
    <style>
        .container-fluid {
            max-width: 1200px;
        }

        .d-flex {
            display: flex;
            flex-wrap: wrap;
        }

        .service-box {
            border: 1px solid #ccc;
            padding: 8px;
            margin: 8px;
            border-radius: 8px;
            background-color: #f9f9f9;
            /* flex: 1 1 calc(50% - 16px); */
            box-sizing: border-box;
        }

        .image-service {
            width: 113px;
            height: 100px;
        }

        .service-box h2 {
            margin-top: 0;
        }

        .service-box p {
            margin: 8px 0;
        }

        .service-box a {
            display: inline-block;
            margin-top: 8px;
            padding: 8px 8px;
            background-color: #007bff;
            color: #fff;
            text-decoration: none;
            border-radius: 4px;
        }

            .service-box a:hover {
                background-color: #0056b3;
            }
    </style>
</body>
</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}